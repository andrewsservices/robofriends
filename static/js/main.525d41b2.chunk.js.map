{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","value","error","info","setState","Component","App","onSearchChange","event","target","_this2","fetch","then","response","json","users","_this$state","filteredRobots","filter","robot","toLowerCase","includes","length","components_SearchBox","components_Scroll","components_ErrorBoundry","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_containers_App"],"mappings":"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","file":"static/js/main.525d41b2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name,email,id}) => {\n    return(\n        <div className = \"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n            <img alt=\"{name}\" src={`https://robohash.org/${id}?200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react'\nimport Card from './Card'\n\n\nconst CardList = ({robots}) => {\n    return(\n        <div>\n            {robots.map((user,i)=>{\n                return (\n                    <Card \n                            key={i}\n                            id={robots[i].id}\n                            name={robots[i].name}\n                            email={robots[i].email}  \n                        />\n                )\n            })}\n        </div>\n    )\n}\n\nexport default CardList;","import React from 'react'\n\nconst SearchBox = ({searchfield,searchChange}) => {\n    return(\n        <div className=\"pa2\">\n            <input \n                className=\"pa3 b--green bg-lightest-blue\"\n                type=\"search\" \n                placeholder='search robots'\n                onChange={searchChange}\n            />\n        </div>\n        \n    )\n}\n\nexport default SearchBox;","import React from 'react'\n\nconst Scroll = (props) => {\n    return(\n        <div style={{overflowY:'scroll',border: '1px solid black',height:'500px'}}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React, {Component} from 'react'\n\nclass ErrorBoundry extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error,info){\n        this.setState({hasError:true})\n    }\n\n    render(){\n        if(this.state.hasError){\n            return <h1>Oops. That is not good</h1>\n        }\n        return this.props.children\n    }\n}\n\n\nexport default ErrorBoundry\n","import React, { Component } from 'react'\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox'\nimport Scroll from '../components/Scroll'\nimport ErrorBoundry from '../components/ErrorBoundry'\n\n\n\n\n\n\nclass App extends Component{\n    constructor(){\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount(){\n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response=>{return response.json()})\n        .then(users=>{this.setState({robots:users})})\n    }\n\n    onSearchChange = (event) => {\n        this.setState({searchfield: event.target.value})\n    }\n    render(){\n        const {robots,searchfield} = this.state;\n        var filteredRobots = robots.filter(robot=>{\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase())\n        })\n        return !robots.length ? \n            <h1>Loading...</h1> : \n                (<div className=\"tc\">\n                    <h1 className=\"f1\">RoboFriends</h1>\n                    <SearchBox\n                        searchChange={this.onSearchChange}\n                    />\n                    <Scroll>\n                        <ErrorBoundry>\n                            <CardList\n                                robots={filteredRobots}\n                            />\n                        </ErrorBoundry>\n                    </Scroll>\n                </div>)\n        }\n    }\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './containers/App.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons'\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}